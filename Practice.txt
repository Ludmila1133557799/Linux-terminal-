1) Что подразумевается под тестовой средой?
Среда тестирования — это настройка программного и аппаратного обеспечения для групп тестирования для выполнения тестовых случаев. Другими словами, он поддерживает выполнение теста с настроенным оборудованием, программным обеспечением и сетью.

2) В чем отличие build от release?
Билд — это в буквальном переводе — "сборка". Т.е. берём срез исходников, создаём некие deliverables, т.е. исполняемые файлы, конфиги, скрипты SQL и т.п. Т.е. билд — полученные из исходников рабочие продукты. Создаётся как вручную по требованию, так и автоматическими системами сборок по расписанию. Как угодно, в общем — было бы что собирать.
Релиз — это билд, который команда разработчиков предоставляет наружу. В качестве потребителя релиза может быть как команда тестеров, так и пользователи. Соответствнно, внутренний релиз — это то, что отдаётся потребителю внутри компании (или команды), внешний релиз — соответственно, отдаётся наружу.
Как правило, релиз создаётся на основе т.н. baseline, т.е. базиса, базовой конфигурации. Команда, путём стабилизации свое работы, выбирает срез исхдников, который может быть использован или как основа для синхронизации всей команды (путём создания билда и его тестирования), или как основа для создания релиза (путём, опять же, создания билда, его тестирования и проверки соответствия критериям качества потребителя).

3) Основные фазы тестирования?
Необходимость проведения тестирования в несколько этапов определяется тем, что разные типы ошибок проще всего обнаруживаются на разных этапах. Основными фазами тестирования являются:

– модульное тестирование;
– интеграционное тестирование;
– системное тестирование (в том числе адаптационное, функциональное и нагрузочное);
– регрессионное тестирование;
– приемочное тестирование.
На стадии модульного тестирования достаточно просто выявляются просчеты в логике построения модуля и/или реализации алгоритмов, ошибки, связанные с неправильным использованием локальных ресурсов, а также ошибки в локальных переменных.

Следующим этапом явлется интеграционное тестирование. Оно проходит в несколько стадий и заключается в тестировании частей системы, состоящих из двух и большего количества модулей. На стадии интеграционного тестирования ошибки управления потоком, ошибки в передаче и/или интерпредтации данных, использовании ресурсов, средств коммуникации.

Третьим этапом является системное тестирование, которое существенным образом отличается от модульного и интеграционного. Оно рассматривает систему как черный ящик и работает исключительно с пользовательскими интерфейсами. Основной целью системного тестирования является проверка стабильности и корректности работы системы, а также соответствия функциональностей системы спецификациям, указанным в сопроводительных документах, проверяется работы системы на базе различных операционных систем и аппаратного обеспечения. Исследуется производительность тестируемого программного обеспечения.

Основной целью регрессионного тестирования является проверка того, что в результате внесения изменений в программный код зафиксированные ранее ошибки исправлены, а новые не появляются. Для регрессионного тестирования используется специально разработанный набор тестов, из которого каждый раз выбираются те тесты, которые позволяют обнаружить появление новых ошибок с наибольшей вероятностью.

Приемочное тестирование — тестирование интегральной функциональности системы на соответствие требованиям заказчика. Планируется с участием представителей заказчика. Проводится на заключительном этапе с целью удостовериться в том, что система работает так, как и ожидалось, все необходимые формы, процедуры присутствуют и функционируют нормально. Данное тестирование является высокоуровневой проверкой отсутствия пробелов в функциональности системы.

Положительные результаты бизнес-тестирования означают, что все компоненты системы работоспособны и включены в данную версию продукта.

4) Что такое импакт анализ?

5) Критерии выбора тестов?

6) Принципы тестирования?
Принцип 1 — Тестирование демонстрирует наличие дефектов (Testing shows presence of defects).
Тестирование только снижает вероятность наличия дефектов, которые находятся в программном обеспечении, но не гарантирует их отсутствия.
Принцип 2 — Исчерпывающее тестирование невозможно (Exhaustive testing is impossible).
Полное тестирование с использованием всех входных комбинаций данных, результатов и предусловий физически невыполнимо (исключение — тривиальные случаи).
Принцип 3 — Раннее тестирование (Early testing).
Следует начинать тестирование на ранних стадиях жизненного цикла разработки ПО, чтобы найти дефекты как можно раньше.
Принцип 4 — Скопление дефектов (Defects clustering).
Большая часть дефектов находится в ограниченном количестве модулей.
Принцип 5 — Парадокс пестицида (Pesticide paradox).
Если повторять те же тестовые сценарии снова и снова, в какой-то момент этот набор тестов перестанет выявлять новые дефекты.
Принцип 6 — Тестирование зависит от контекста (Testing is context depending). Тестирование проводится по-разному в зависимости от контекста. Например, программное обеспечение, в котором критически важна безопасность, тестируется иначе, чем новостной портал.
Принцип 7 — Заблуждение об отсутствии ошибок (Absence-of-errors fallacy). Отсутствие найденных дефектов при тестировании не всегда означает готовность продукта к релизу. Система должна быть удобна пользователю в использовании и удовлетворять его ожиданиям и потребностям.


Что такое независимое тестирование?

8) Что такое тестирование со сдвигом влево?
В попытке перенести тестирование на более ранний этап жизненного цикла разработки при одновременном улучшении показателей качества, задачи смещаются влево в схеме жизненного цикла разработки ПО. По возможности, тестирование должно проводиться с самого начала фазы проектирования, чтобы построить соответствующую стратегию тестирования.
Проще говоря, это подход к тестированию программного обеспечения и тестированию системы, при котором тестирование выполняется на более раннем этапе жизненного цикла.
Ключевые преимущества:
Сокращение затрат
Более высокое качество
Повышение эффективности
Конкурентные преимущества


Почему тестирование делится на отдельные этапы?
Какие есть этапы тестирования?
Как вы тестируете продукт, если требования еще не зафиксированы?
Как вы узнаете, было ли создано достаточно тестов для тестирования продукта?
Что подразумевается под тестовыми данными?
Что такое бета-тестирование?
Что означает пилотное тестирование? (Pilot)
В чем отличие build от release?
Что такое бизнес – логика?
Какие существуют основные виды тестирования ПО?
Методы тестирования?
Что такое пирамида / уровни тестирования?
Что такое деструктивное/разрушающее/негативное тестирование? (DT — Destructive testing)
Что такое недеструктивное/неразрушающее/позитивное тестирование? (NDT – Non Destructive testing)
Что подразумевается под компонентным/модульным/юнит тестированием? (Component/Module/Unit testing)
Что подразумевается под интеграционным тестированием?
Разница между Unit testing и Integration testing?
Что такое системное интеграционное тестирование? (SIT — System Integration testing)
В чем разница между тест-драйвером и тест-заглушкой? (Test Driver and Test Stub)
Что подразумевается под системным тестированием?
Что такое функциональное тестирование?
Что такое тестирование совместимости/взаимодействия? (Compatibility/Interoperability testing)
Что такое тестирование на соответствие? (Conformance/Compilance testing)
Что такое нефункциональное тестирование?
Что вы знаете о Тестировании удобства пользования?
Отличия тестирование на удобство пользования и тестирования доступности? (Usability Vs. Accessibility testing)
Что такое тестирование интерфейса?
Что такое тестирование рабочего процесса/воркфлоу? (Workflow testing)
Что вы знаете о пользовательском приемочном тестировании? (UAT – User Acceptance testing)
Что такое эксплуатационное приемочное тестирование? (OAT — Operational Acceptance testing)
Что такое инсталляционное тестирование?
Что вы знаете о тестировании безопасности?
Что такое конфигурационное тестирование?
Объясните, что такое тестирование N+1
Что вы знаете о тестировании сборки? (Build Verification Test)
Что такое тестирование потоков? (Thread testing)
Что вы знаете о мутационном тестировании? (Mutation testing)
Что вы знаете о мутационном тестировании? (Mutation testing)
В чем разница между Baseline и Benchmark testing?
Что такое A/B тестирование?
Что означает сквозное тестирование? (E2E — End–to–End)
В чем разница между E2E и системным тестированием?
Что такое параллельное тестирование? (Parallel testing)
Чем AdHock тестирование отличается от Исследовательского тестирования?
